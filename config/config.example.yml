# NFL Prediction Model Configuration
# Copy this file to config.yml and update with your settings

# Data sources configuration
data:
  sources:
    # API endpoints
    nfl_api:
      base_url: "https://api.example.com/nfl"
      api_key: "YOUR_API_KEY_HERE"
      rate_limit: 100  # requests per minute
    
    # Database connections
    database:
      host: "localhost"
      port: 5432
      database: "nfl_data"
      username: "user"
      password: "password"
    
    # File paths
    raw_data_path: "data/raw"
    processed_data_path: "data/processed"
    
  # Data collection settings
  collection:
    seasons: [2020, 2021, 2022, 2023, 2024]
    update_frequency: "daily"  # daily, weekly, manual
    retry_attempts: 3
    timeout: 30  # seconds

# Feature engineering configuration
features:
  # Statistical windows
  rolling_windows: [3, 5, 10]  # games
  
  # Feature groups to include
  include:
    - basic_stats
    - advanced_metrics
    - weather_data
    - injury_reports
    - betting_lines
    
  # Feature scaling
  scaling_method: "standard"  # standard, minmax, robust

# Model configuration
models:
  # Models to train
  algorithms:
    - random_forest
    - xgboost
    - lightgbm
    - neural_network
    
  # Training settings
  training:
    test_size: 0.2
    validation_size: 0.1
    random_state: 42
    cross_validation_folds: 5
    
  # Hyperparameter tuning
  hyperparameter_tuning:
    method: "optuna"  # grid, random, bayesian, optuna
    n_trials: 100
    timeout: 3600  # seconds
    
  # Model persistence
  model_path: "models/trained"
  save_best_only: true

# Evaluation metrics
evaluation:
  metrics:
    - accuracy
    - precision
    - recall
    - f1_score
    - roc_auc
    - log_loss
  
  # Backtesting
  backtest:
    enabled: true
    start_season: 2021
    betting_simulation: true
    initial_bankroll: 1000

# API configuration
api:
  host: "0.0.0.0"
  port: 8000
  workers: 4
  reload: false
  cors_origins: ["*"]
  
  # Rate limiting
  rate_limit:
    enabled: true
    requests_per_minute: 60

# Logging configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "json"  # json, text
  file: "logs/nfl_prediction.log"
  rotation:
    max_bytes: 10485760  # 10MB
    backup_count: 5

# Monitoring and alerting
monitoring:
  mlflow:
    enabled: true
    tracking_uri: "http://localhost:5000"
    experiment_name: "nfl_prediction"
    
  alerts:
    enabled: false
    email: "alerts@example.com"
    slack_webhook: "https://hooks.slack.com/services/YOUR/WEBHOOK/URL"

# Deployment configuration
deployment:
  environment: "development"  # development, staging, production
  
  docker:
    image_name: "nfl-prediction"
    registry: "docker.io/username"
    
  kubernetes:
    namespace: "ml-models"
    replicas: 2
    
# Experiment tracking
experiments:
  track_experiments: true
  compare_models: true
  save_artifacts: true
  artifact_location: "experiments/artifacts"
